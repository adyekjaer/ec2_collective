#!/bin/sh

### BEGIN INIT INFO
# Provides: ec2-cagent
# Short-Description: Start and stop ec2-cagent
# Description: ec2-cagent is the instance agent of ec2_collective
# Required-Start: $remote_fs $network
# Required-Stop: $remote_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
### END INIT INFO

if [ $(whoami) != 'root' ]; then
    echo 'You must be root'
    exit 1
fi

. /lib/lsb/init-functions

AGENTPATH="/usr/local/bin/ec2-cagent"
AGENTCONF="/etc/ec2_collective/ec2-cagent.json"
NAME="ec2-cagent"
DESC="ec2_collective agent"
AGENT_PID_PATH="/var/run/ec2_collective"

# Check that path for pid file exists
if [ ! -d "$AGENT_PID_PATH" ]; then
    mkdir -p $AGENT_PID_PATH
fi

check_avail() {
    if supervisorctl avail | grep $NAME | grep -q avail; then
        echo "Adding $NAME to supervisor"
        supervisorctl add $NAME
    fi
    return 0
}

check_status() {
    if supervisorctl status $NAME | grep -q RUNNING; then
        echo "$DESC is running"
        return 0
    else
       echo "$DESC is NOT running"
       return 1
    fi
}

check_avail > /dev/null

# Action to take
case "$1" in
    start)

        if [ ! -f $AGENTCONF ]; then
            echo "$AGENTCONF not found. Exiting."
            exit 3
        fi

        check_status > /dev/null
        if [ $? -eq 0 ]; then
            echo "$DESC is already running"
            exit 0
        fi

        log_daemon_msg "Starting $DESC (using supervisord)" "$NAME"
        supervisorctl start ec2-cagent
        if [ $? -ne 0 ]; then
            log_end_msg 1
        else
           log_end_msg 0
           exit 0
        fi
        ;;
    stop)
        log_daemon_msg "Stopping $DESC (using supervisord)" "$NAME"
        supervisorctl stop ec2-cagent
        log_end_msg $?
        ;;

    status)
        check_status
        ;;

    restart|force-reload)
        $0 stop
        $0 start
        ;;
    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|tatus}"
        exit 1
        ;;
esac

exit $?
